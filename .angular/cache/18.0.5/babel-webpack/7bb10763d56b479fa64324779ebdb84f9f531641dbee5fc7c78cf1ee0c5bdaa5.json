{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services/olympic.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../graphics/context/context.component\";\nimport * as i4 from \"primeng/chart\";\nexport class HomeComponent {\n  constructor(olympicService) {\n    this.olympicService = olympicService;\n    this.olympics$ = of(null);\n  }\n  ngOnInit() {\n    const documentStyle = getComputedStyle(document.documentElement);\n    const textColor = documentStyle.getPropertyValue('--p-text-color');\n    this.options = {\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          labels: {\n            usePointStyle: true,\n            color: '#000000'\n          }\n        }\n      }\n    };\n    this.olympics$ = this.olympicService.getOlympics();\n    this.olympicService.getOlympics().subscribe(datas => {\n      if (datas == undefined) return;\n      this.totalOlympics = datas.length;\n      let countryName = [];\n      let medalsCount = [];\n      this.totalMedals = 0;\n      for (let olympic of datas) {\n        countryName.push(olympic.country);\n        medalsCount.push(this.calcMedals(olympic));\n        this.totalMedals += this.calcMedals(olympic);\n      }\n      this.dataChart = {\n        labels: countryName,\n        datasets: [{\n          data: medalsCount,\n          backgroundColor: ['#793d52', '#89a1db', '#9780a1', '#956065', '#bfe0f1'],\n          hoverBackgroundColor: ['#793d52', '#89a1db', '#9780a1', '#956065', '#bfe0f1']\n        }]\n      };\n    });\n  }\n  calcMedals(olympic) {\n    let totalMedals = 0;\n    for (let participation of olympic.participations) {\n      totalMedals += participation.medalsCount;\n    }\n    return totalMedals;\n  }\n  test(event) {\n    console.log(event);\n  }\n  static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.OlympicService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 12,\n    vars: 5,\n    consts: [[1, \"card\", \"flex\", \"justify-content-center\"], [\"type\", \"pie\", 3, \"onDataSelect\", \"data\", \"options\", \"responsive\"], [\"routerLink\", \"details\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-context\")(1, \"hr\");\n        i0.ɵɵelementStart(2, \"p\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"hr\");\n        i0.ɵɵelementStart(5, \"p\");\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 0)(8, \"p-chart\", 1);\n        i0.ɵɵlistener(\"onDataSelect\", function HomeComponent_Template_p_chart_onDataSelect_8_listener() {\n          return ctx.test();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(9, \"hr\");\n        i0.ɵɵelementStart(10, \"a\", 2);\n        i0.ɵɵtext(11, \"D\\u00E9tails pour tous les pays\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.totalMedals);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.totalOlympics);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"data\", ctx.dataChart)(\"options\", ctx.options)(\"responsive\", true);\n      }\n    },\n    dependencies: [i2.RouterLink, i3.ContextComponent, i4.UIChart],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["of","HomeComponent","constructor","olympicService","olympics$","ngOnInit","documentStyle","getComputedStyle","document","documentElement","textColor","getPropertyValue","options","maintainAspectRatio","plugins","legend","labels","usePointStyle","color","getOlympics","subscribe","datas","undefined","totalOlympics","length","countryName","medalsCount","totalMedals","olympic","push","country","calcMedals","dataChart","datasets","data","backgroundColor","hoverBackgroundColor","participation","participations","test","event","console","log","_","i0","ɵɵdirectiveInject","i1","OlympicService","_2","selectors","decls","vars","consts","template","HomeComponent_Template","rf","ctx","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","HomeComponent_Template_p_chart_onDataSelect_8_listener","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty"],"sources":["/home/gildas/Documents/8 - Dév/Formation OC Fullstack Java Angular/Projets/Projet 2 - Angular/Git/front/src/app/pages/home/home.component.ts","/home/gildas/Documents/8 - Dév/Formation OC Fullstack Java Angular/Projets/Projet 2 - Angular/Git/front/src/app/pages/home/home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { OlympicService } from 'src/app/core/services/olympic.service';\nimport { Olympics } from 'src/app/core/models/Olympics';\nimport { Participations } from 'src/app/core/models/Participations';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n\t\n  \tpublic olympics$: Observable<any> = of(null);\n  \tpublic totalOlympics!:number;\n  \tpublic totalMedals!:number;\n\t\n\tdataChart !: any;\n\toptions !: any;\n\n  \tconstructor(private olympicService: OlympicService) {}\n\n  \tngOnInit(): void {\n\t\t\n\t\tconst documentStyle = getComputedStyle(document.documentElement);\n    \tconst textColor = documentStyle.getPropertyValue('--p-text-color');\n    \t\n      \tthis.options = {\n\t\t\tmaintainAspectRatio: false,\n\t\t\tplugins: {\n\t\t   \t\tlegend: {\n\t\t     \t\tlabels: {\n\t\t        \t\tusePointStyle: true,\n\t\t       \t\t\tcolor: '#000000'\n\t\t     \t\t}\n\t\t\t\t}\n\t\t\t}\n   \t\t};\n\t\t\n   \t\tthis.olympics$ = this.olympicService.getOlympics();\n   \t\t\n    \tthis.olympicService.getOlympics().subscribe (\n\t\t\t(datas:Olympics[]) => {\n\t\t\t\tif (datas == undefined)return;\n\t\t\t\tthis.totalOlympics = datas.length;\n\t\t\t\tlet countryName:string[]=[];\n\t\t\t\tlet medalsCount:number[]=[];\n\t\t\t\tthis.totalMedals = 0;\n\t\t\t\tfor(let olympic of datas){\n\t\t\t\t\tcountryName.push(olympic.country);\n\t\t\t\t\tmedalsCount.push(this.calcMedals(olympic));\n\t\t\t\t\tthis.totalMedals += this.calcMedals(olympic);\n\t\t\t\t}\n\t\t\t\tthis.dataChart = {\n\t\t\t\t\tlabels: countryName,\n\t\t\t\t datasets: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\tdata: medalsCount,\n\t\t\t\t\t\tbackgroundColor: ['#793d52', '#89a1db', '#9780a1','#956065', '#bfe0f1'],\n\t\t\t\t\t\thoverBackgroundColor: ['#793d52', '#89a1db', '#9780a1','#956065', '#bfe0f1']\n\t\t\t\t\t\t}\n\t\t\t\t   ]\n\t\t\t   };\n\t\t\t }\n\t\t);\n\n  }\n  private calcMedals(olympic:Olympics):number{\n    let totalMedals = 0;\n    for(\n      let participation of olympic.participations\n    ){\n      totalMedals += participation.medalsCount;\n    }\n    return totalMedals\n  }\n\n  public test(event:any){\n\tconsole.log(event);\n  }\n\n}\n","<app-context></app-context>\n<hr />\n<p>{{ totalMedals }}</p>\n<hr />\n<p>{{ totalOlympics }}</p>\n<div class=\"card flex justify-content-center\">\n\t<p-chart type=\"pie\" [data]=\"dataChart\" [options]=\"options\" [responsive]=\"true\" (onDataSelect)=\"test()\"/>\n</div>\n \n<hr />\n<a routerLink=\"details\">Détails pour tous les pays</a>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}