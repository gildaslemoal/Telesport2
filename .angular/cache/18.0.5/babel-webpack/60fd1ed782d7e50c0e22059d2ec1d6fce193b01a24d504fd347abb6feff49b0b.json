{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services/olympic.service\";\nimport * as i2 from \"@angular/router\";\nexport class DetailsComponent {\n  constructor(olympicService, route) {\n    this.olympicService = olympicService;\n    this.route = route;\n    this.olympics$ = of(null);\n  }\n  ngOnInit() {\n    let id = this.route.snapshot.params[\"id\"];\n    console.log(id);\n    this.olympics$ = this.olympicService.getOlympics();\n    this.olympicService.getOlympics().subscribe(datasPerCountry => {\n      if (datas == undefined) return;\n      let medalsCount = [];\n      this.totalMedals = 0;\n      for (let olympic of datasPerCountry) {\n        medalsCount.push(this.calcMedals(olympic));\n        if (id == olympic.id) {\n          this.participationOfCountry = olympic.participations.length;\n          this.medalsOfCountry = this.calcMedals(olympic);\n          this.totalAthletes = this.calcAthletes(olympic);\n        }\n      }\n    });\n    this.basicData = {\n      labels: ['Q1', 'Q2', 'Q3', 'Q4'],\n      datasets: [{\n        label: 'Sales',\n        data: [540, 325, 702, 620],\n        backgroundColor: ['rgba(249, 115, 22, 0.2)', 'rgba(6, 182, 212, 0.2)', 'rgb(107, 114, 128, 0.2)', 'rgba(139, 92, 246, 0.2)'],\n        borderColor: ['rgb(249, 115, 22)', 'rgb(6, 182, 212)', 'rgb(107, 114, 128)', 'rgb(139, 92, 246)'],\n        borderWidth: 1\n      }]\n    };\n    const documentStyle = getComputedStyle(document.documentElement);\n    const textColor = documentStyle.getPropertyValue('--p-text-color');\n    this.basicOptions = {\n      plugins: {\n        legend: {\n          labels: {\n            color: textColor\n          }\n        }\n      }\n    };\n  }\n  calcMedals(olympic) {\n    let totalMedals = 0;\n    for (let participation of olympic.participations) {\n      totalMedals += participation.medalsCount;\n    }\n    return totalMedals;\n  }\n  calcAthletes(olympic) {\n    let totalAthletes = 0;\n    for (let participation of olympic.participations) {\n      totalAthletes += participation.athleteCount;\n    }\n    return totalAthletes;\n  }\n  static #_ = this.ɵfac = function DetailsComponent_Factory(t) {\n    return new (t || DetailsComponent)(i0.ɵɵdirectiveInject(i1.OlympicService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DetailsComponent,\n    selectors: [[\"app-details\"]],\n    decls: 8,\n    vars: 3,\n    consts: [[1, \"container1\"], [\"routerLink\", \"\"]],\n    template: function DetailsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 0);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"a\", 1);\n        i0.ɵɵtext(7, \"Go back\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance();\n        i0.ɵɵtextInterpolate1(\"Number of entries \", ctx.participationOfCountry, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Total number medals \", ctx.medalsOfCountry, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Total number of athletes \", ctx.totalAthletes, \"\");\n      }\n    },\n    dependencies: [i2.RouterLink],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["of","DetailsComponent","constructor","olympicService","route","olympics$","ngOnInit","id","snapshot","params","console","log","getOlympics","subscribe","datasPerCountry","datas","undefined","medalsCount","totalMedals","olympic","push","calcMedals","participationOfCountry","participations","length","medalsOfCountry","totalAthletes","calcAthletes","basicData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","documentStyle","getComputedStyle","document","documentElement","textColor","getPropertyValue","basicOptions","plugins","legend","color","participation","athleteCount","_","i0","ɵɵdirectiveInject","i1","OlympicService","i2","ActivatedRoute","_2","selectors","decls","vars","consts","template","DetailsComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1"],"sources":["/home/gildas/Documents/8 - Dév/Formation OC Fullstack Java Angular/Projets/Projet 2 - Angular/Git/front/src/app/pages/details/details.component.ts","/home/gildas/Documents/8 - Dév/Formation OC Fullstack Java Angular/Projets/Projet 2 - Angular/Git/front/src/app/pages/details/details.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Olympics } from 'src/app/core/models/Olympics';\nimport { OlympicService } from 'src/app/core/services/olympic.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrl: './details.component.scss',\n  })\nexport class DetailsComponent implements OnInit{\n  public olympics$: Observable<any> = of(null);\n  public totalJOsPerCountry!:number;\n  public totalMedalsPerCountry!:number;\n  public totalAthletesPerCountry!:number;\n  \n  public totalJOs!:number;\n  public totalMedals!:number;\n\n  public participationOfCountry!: number;\n  public medalsOfCountry!: number;\n  public totalAthletes!: number;\n\n  basicData: any;\n  basicOptions: any;\n\n  constructor(private olympicService: OlympicService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    let id = this.route.snapshot.params[\"id\"];\n    console.log(id);\n    this.olympics$ = this.olympicService.getOlympics();\n\n    this.olympicService.getOlympics().subscribe (\n      (datasPerCountry:Olympics[]) => {\n        if (datas == undefined)return;\n        let medalsCount:number[]=[];\n        this.totalMedals = 0;\n        for(let olympic of datasPerCountry){\n\t\t\t\t\tmedalsCount.push(this.calcMedals(olympic));\n          if(id == olympic.id) {\n            this.participationOfCountry = olympic.participations.length ;\n            this.medalsOfCountry = this.calcMedals(olympic);\n            this.totalAthletes = this.calcAthletes(olympic);\n\n          }\n        }\n      }\n    );\n    this.basicData = {\n      labels: ['Q1', 'Q2', 'Q3', 'Q4'],\n      datasets: [\n          {\n              label: 'Sales',\n              data: [540, 325, 702, 620],\n              backgroundColor: [\n                  'rgba(249, 115, 22, 0.2)',\n                  'rgba(6, 182, 212, 0.2)',\n                  'rgb(107, 114, 128, 0.2)',\n                  'rgba(139, 92, 246, 0.2)',\n              ],\n              borderColor: ['rgb(249, 115, 22)', 'rgb(6, 182, 212)', 'rgb(107, 114, 128)', 'rgb(139, 92, 246)'],\n              borderWidth: 1,\n          },\n      ],\n  };\n\n  const documentStyle = getComputedStyle(document.documentElement);\n  const textColor = documentStyle.getPropertyValue('--p-text-color');\n\n  this.basicOptions = {\n      plugins: {\n          legend: {\n              labels: {\n                  color: textColor,\n              },\n          },\n      },\n      \n  };\n  }\n  private calcMedals(olympic:Olympics):number{\n  let totalMedals = 0;\n  for(let participation of olympic.participations){\n    totalMedals += participation.medalsCount;\n  }\n  return totalMedals\n  }\n\n  private calcAthletes(olympic:Olympics):number{\n    let totalAthletes = 0;\n    for(let participation of olympic.participations){\n      totalAthletes += participation.athleteCount;\n    }\n    return totalAthletes\n  }\n    \n}\n","<div class=\"container1\">Number of entries {{  participationOfCountry }}</div>\n<div class=\"container1\">Total number medals {{ medalsOfCountry }}</div>\n<div class=\"container1\">Total number of athletes {{ totalAthletes }}</div>\n<a routerLink=\"\">Go back</a>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}