{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services/olympic.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../graphics/title/title.component\";\nimport * as i4 from \"../../graphics/context/context.component\";\nimport * as i5 from \"../../graphics/pie/pie.component\";\nimport * as i6 from \"../../graphics/numbers/numbers.component\";\nimport * as i7 from \"primeng/chart\";\nimport * as i8 from \"@angular/common\";\nexport class HomeComponent {\n  constructor(olympicService) {\n    this.olympicService = olympicService;\n    this.olympics$ = of(null);\n  }\n  ngOnInit() {\n    const documentStyle = getComputedStyle(document.documentElement);\n    const textColor = documentStyle.getPropertyValue('--p-text-color');\n    this.options = {\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          labels: {\n            usePointStyle: true,\n            color: '#000000'\n          }\n        }\n      }\n    };\n    this.olympics$ = this.olympicService.getOlympics();\n    this.olympicService.getOlympics().subscribe(datas => {\n      let countryName = [];\n      let medalsCount = [];\n      for (let olympic of datas) {\n        countryName.push(olympic.country);\n        medalsCount.push(this.calcMedals(olympic));\n      }\n      this.dataChart.labels = countryName;\n      this.dataChart.datasets.data = medalsCount;\n      this.dataChart = {\n        labels: countryName,\n        datasets: [{\n          data: medalsCount,\n          backgroundColor: ['#793d52', '#89a1db', '#9780a1'],\n          hoverBackgroundColor: ['#8d4a62', '#9cb1e0', '#a18ba8']\n        }]\n      };\n    });\n  }\n  calcMedals(olympic) {\n    let totalMedals = 0;\n    for (let participation of olympic.participations) {\n      totalMedals += participation.medalsCount;\n    }\n    return totalMedals;\n  }\n  static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.OlympicService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 18,\n    vars: 7,\n    consts: [[1, \"card\", \"flex\", \"justify-content-center\"], [\"type\", \"pie\", 3, \"data\", \"options\", \"responsive\"], [\"routerLink\", \"details\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-context\")(1, \"hr\")(2, \"app-title\")(3, \"hr\")(4, \"app-numbers\")(5, \"hr\")(6, \"app-pie\")(7, \"hr\");\n        i0.ɵɵelementStart(8, \"p\");\n        i0.ɵɵtext(9);\n        i0.ɵɵpipe(10, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"p\");\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 0);\n        i0.ɵɵelement(14, \"p-chart\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"hr\");\n        i0.ɵɵelementStart(16, \"a\", 2);\n        i0.ɵɵtext(17, \"D\\u00E9tails pour tous les pays\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        let tmp_0_0;\n        i0.ɵɵadvance(9);\n        i0.ɵɵtextInterpolate1(\"\", (tmp_0_0 = i0.ɵɵpipeBind1(10, 5, ctx.olympics$)) == null ? null : tmp_0_0.length, \" data loaded\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.totalCountries);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"data\", ctx.dataChart)(\"options\", ctx.options)(\"responsive\", true);\n      }\n    },\n    dependencies: [i2.RouterLink, i3.TitleComponent, i4.ContextComponent, i5.PieComponent, i6.NumbersComponent, i7.UIChart, i8.AsyncPipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["of","HomeComponent","constructor","olympicService","olympics$","ngOnInit","documentStyle","getComputedStyle","document","documentElement","textColor","getPropertyValue","options","maintainAspectRatio","plugins","legend","labels","usePointStyle","color","getOlympics","subscribe","datas","countryName","medalsCount","olympic","push","country","calcMedals","dataChart","datasets","data","backgroundColor","hoverBackgroundColor","totalMedals","participation","participations","_","i0","ɵɵdirectiveInject","i1","OlympicService","_2","selectors","decls","vars","consts","template","HomeComponent_Template","rf","ctx","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","tmp_0_0","ɵɵpipeBind1","length","ɵɵtextInterpolate","totalCountries","ɵɵproperty"],"sources":["/home/gildas/Documents/8 - Dév/Formation OC Fullstack Java Angular/Projets/Projet 2 - Angular/Git/front/src/app/pages/home/home.component.ts","/home/gildas/Documents/8 - Dév/Formation OC Fullstack Java Angular/Projets/Projet 2 - Angular/Git/front/src/app/pages/home/home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { OlympicService } from 'src/app/core/services/olympic.service';\nimport { Olympics } from 'src/app/core/models/Olympics';\nimport { Participations } from 'src/app/core/models/Participations';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n\t\n  \tpublic olympics$: Observable<any> = of(null);\n  \tpublic totalCountries!:number;\n  \tpublic totalMedals!:any[];\n\n\tdataChart !: any;\n\toptions !: any;\n\n  \tconstructor(private olympicService: OlympicService) {}\n\n  \tngOnInit(): void {\n\t\t\n\t\tconst documentStyle = getComputedStyle(document.documentElement);\n    \tconst textColor = documentStyle.getPropertyValue('--p-text-color');\n    \t\n      \tthis.options = {\n\t\t\tmaintainAspectRatio: false,\n\t\t\tplugins: {\n\t\t   \t\tlegend: {\n\t\t     \t\tlabels: {\n\t\t        \t\tusePointStyle: true,\n\t\t       \t\t\tcolor: '#000000'\n\t\t     \t\t}\n\t\t\t\t}\n\t\t\t}\n   \t\t};\n      \n\t\t\n\t\t\n   \t\tthis.olympics$ = this.olympicService.getOlympics();\n   \t\t\n    \tthis.olympicService.getOlympics().subscribe (\n\t\t\t(datas:Olympics[]) => {\n\t\t\t\tlet countryName:string[]=[];\n\t\t\t\tlet medalsCount:number[]=[];\n\t\t\t\tfor(let olympic of datas){\n\t\t\t\t\tcountryName.push(olympic.country);\n\t\t\t\t\tmedalsCount.push(this.calcMedals(olympic));\n\t\t\t\t}\n\t\t\t\tthis.dataChart.labels=countryName;\n\t\t\t\tthis.dataChart.datasets.data=medalsCount;\n\t\t\t\tthis.dataChart = {\n\t\t\t\t\tlabels: countryName,\n\t\t\t\t datasets: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata: medalsCount,\n\t\t\t\t\t\t   backgroundColor: ['#793d52', '#89a1db', '#9780a1'],\n\t\t\t\t\t\t  hoverBackgroundColor: ['#8d4a62', '#9cb1e0', '#a18ba8']\n\t\t\t\t\t\t}\n\t\t\t\t   ]\n\t\t\t   };\n\t\t\t }\n\t\t);\n\n  }\n  private calcMedals(olympic:Olympics):number{\n    let totalMedals = 0;\n    for(\n      let participation of olympic.participations\n    ){\n      totalMedals += participation.medalsCount;\n    }\n    return totalMedals\n  }\n}\n","<app-context></app-context>\n<hr />\n<app-title></app-title>\n<hr />\n<app-numbers></app-numbers>\n<hr />\n<app-pie></app-pie>\n<hr />\n<p>{{ (olympics$ | async)?.length }} data loaded</p>\n<p>{{ totalCountries }}</p>\n<div class=\"card flex justify-content-center\">\n\t<p-chart type=\"pie\" [data]=\"dataChart\" [options]=\"options\" [responsive]=\"true\"/>\n</div>\n \n<hr />\n<a routerLink=\"details\">Détails pour tous les pays</a>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}